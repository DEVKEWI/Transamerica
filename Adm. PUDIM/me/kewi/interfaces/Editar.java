/*
 * Projeto destribuido por DEVKEWI COMPANY - Todos os direitos reservados.
 * Para alteração do código fonte estará disposto a concordar com termos.
 */
package me.kewi.interfaces;

import java.text.SimpleDateFormat;
import java.util.Map;
import javax.swing.JOptionPane;
import me.kewi.Excel;
import me.kewi.clientes.Cliente;

/**
 *
 * @author Jane
 */
public class Editar extends javax.swing.JFrame {

    /**
     * Creates new form Editar
     */
    public Editar() {
        initComponents();
        setTitle("Editar requisição");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tOS = new javax.swing.JTextField();
        jOS = new javax.swing.JLabel();
        bPesquisar = new javax.swing.JButton();
        jMenu = new javax.swing.JMenuBar();
        bVoltar = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jOS.setText("OS:");

        bPesquisar.setText("Procurar");
        bPesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bPesquisarMouseClicked(evt);
            }
        });

        bVoltar.setText("VOLTAR");
        bVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bVoltarMouseClicked(evt);
            }
        });
        jMenu.add(bVoltar);

        setJMenuBar(jMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jOS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tOS, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(bPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOS)
                    .addComponent(tOS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bPesquisar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bVoltarMouseClicked
        this.setVisible(false);
        Requisitos r = new Requisitos();
        r.setVisible(true);
    }//GEN-LAST:event_bVoltarMouseClicked

    private void bPesquisarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bPesquisarMouseClicked
        if (tOS.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O campo \"OS\" não pode estar em branco", "Campos em brancos", 2);
            return;
        }
        double d = Integer.parseInt(tOS.getText());
        Map<Double, Cliente> map = Excel.getManager().getMap();
        if (!map.containsKey(d)) {
            JOptionPane.showMessageDialog(null, "Desculpe, mas essa O.S não foi encontrada!", "Falha na busca", 2);
            return;
        }
        Cliente c = map.get(d);
        String cliente = c.getNome();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");
        String dia = sdf.format(c.getDate()).replace(" ", " às ");
        int result = JOptionPane.showConfirmDialog(null, "Deseja editar a O.S do cliente \"" + cliente + "\" marcada para o dia " + dia + "?", "Confirmar procura", 2);
        if (result == JOptionPane.YES_OPTION) {
            this.setVisible(false);
            Editando e = new Editando();
            e.setTitle("Editando O.S do cliente " + cliente);
            e.getNome().setText(cliente);
            e.getTelefone().setText(c.getTelefone());
            e.getjQuantidade().setText("Quantidade: " + c.getQnt());
            e.getjDia().setText(dia);
            e.getOS().setText("" + d);
            e.getjEstado().setText(c.getEstado().name());
            e.setVisible(true);
        }
    }//GEN-LAST:event_bPesquisarMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bPesquisar;
    private javax.swing.JMenu bVoltar;
    private javax.swing.JMenuBar jMenu;
    private javax.swing.JLabel jOS;
    private javax.swing.JTextField tOS;
    // End of variables declaration//GEN-END:variables
}
