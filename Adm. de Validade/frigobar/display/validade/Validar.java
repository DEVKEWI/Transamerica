/*
 * Projeto destribuido por DEVKEWI COMPANY - Todos os direitos reservados.
 * Para alteração do código fonte estará disposto a concordar com termos.
 */
package frigobar.display.validade;

import frigobar.display.Menu;
import frigobar.manager.FileManager;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JTable;
import javax.swing.table.TableModel;
import me.kewi.Frigobar;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;

/**
 *
 * @author DEVKEWI COMPANY - Kewilleen
 */
public class Validar extends javax.swing.JFrame {

    private frigobar.manager.Validation v = Frigobar.getValidation();
    private Menu m = v.getMenu();
    private FileManager fm = v.getFileManager();
    private double id;
    private String produto, talmox, validade;
    private int lote, qnt;

    /**
     * Creates new form Validar
     */
    public Validar(double id) {
        initComponents();
        Frigobar.getValidation().minimizar(this);
        setTitle("Editar");
        setLocationRelativeTo(null);
        Image img = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/frigobar/imagens/Icon/logo16x16.png"));
        setIconImage(img);
        this.id = id;
        produto = v.getValidade().getProduto(id);
        talmox = v.getValidade().getTAlmox(id);
        validade = v.getValidade().getValidade(id);
        lote = v.getValidade().getLote(id);
        qnt = v.getValidade().getQnt(id);
        lProduto.setText("Produto a ser editado: " + produto);
        tAlmox.setText(talmox);
        tValidade.setText(validade);
        tLote.setText("" + (int) lote);
        tQnt.setText("" + (int) qnt);
        lid.setText("ID: " + (int) id);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tAlmox = new javax.swing.JFormattedTextField();
        tValidade = new javax.swing.JFormattedTextField();
        tLote = new javax.swing.JTextField();
        tQnt = new javax.swing.JTextField();
        lTAlmox = new javax.swing.JLabel();
        lValidade = new javax.swing.JLabel();
        lQnt = new javax.swing.JLabel();
        lLote = new javax.swing.JLabel();
        lProduto = new javax.swing.JLabel();
        tEditar = new javax.swing.JButton();
        lid = new javax.swing.JLabel();
        bMenuBar = new javax.swing.JMenuBar();
        bMenu = new javax.swing.JMenu();
        bVoltar = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        try {
            tAlmox.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tAlmox.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        try {
            tValidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tValidade.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tLote.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        tQnt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lTAlmox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lTAlmox.setText("T. Almox.");

        lValidade.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lValidade.setText("Validade");

        lQnt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lQnt.setText("Qnt.");

        lLote.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lLote.setText("Lote");

        lProduto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lProduto.setText("Produto");

        tEditar.setText("Editar");
        tEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tEditarMouseClicked(evt);
            }
        });

        bMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frigobar/imagens/Icon/home16x16.png"))); // NOI18N
        bMenu.setText("Menu");
        bMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bMenuMouseClicked(evt);
            }
        });
        bMenuBar.add(bMenu);

        bVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frigobar/imagens/Icon/back16x16.png"))); // NOI18N
        bVoltar.setText("Voltar");
        bVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bVoltarMouseClicked(evt);
            }
        });
        bMenuBar.add(bVoltar);

        setJMenuBar(bMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tLote)
                            .addComponent(lLote, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tQnt)
                            .addComponent(lQnt, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lTAlmox, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addComponent(tAlmox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lValidade, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(tValidade)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lid)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tEditar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lProduto)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lLote)
                    .addComponent(lQnt)
                    .addComponent(lTAlmox)
                    .addComponent(lValidade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tQnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tAlmox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lid)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(tEditar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bMenuMouseClicked
        this.setVisible(false);
        m.setVisible(true);
    }//GEN-LAST:event_bMenuMouseClicked

    private void bVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bVoltarMouseClicked
        Validation display = this.v.getValidation();
        this.setVisible(false);
        display.setVisible(true);
    }//GEN-LAST:event_bVoltarMouseClicked

    private void tEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tEditarMouseClicked
        String almox = tAlmox.getText();
        for (String split : almox.split("/")) {
            if (split.replace("  ", "").isEmpty()) {
                Frigobar.sendInfo(2, "A data (T.Almox.) não pode ser em branco", "Data irregular");
                return;
            }
        }
        String lote = tLote.getText();
        String qnt = tQnt.getText();
        boolean l = Frigobar.isNumeric(lote);
        if (!l || !Frigobar.isNumeric(qnt)) {
            Frigobar.sendInfo(2, (!l ? "Lote" : "Quantidade") + " deve ser númerico", (!l ? "Lote" : "Quantidade") + " irregular");
            return;
        }
        String validade = tValidade.getText();
        for (String split : validade.split("/")) {
            if (split.replace("  ", "").isEmpty()) {
                Frigobar.sendInfo(2, "A data (validade) não pode ser em branco", "Data irregular");
                return;
            }
        }
        if (almox.equalsIgnoreCase(this.talmox) && validade.equalsIgnoreCase(this.validade) && this.lote == Integer.parseInt(lote) && this.qnt == Integer.parseInt(qnt)) {
            Frigobar.sendInfo(2, "A edição não deve ser igual a anterior", "Edição inadequada");
            return;
        }
        try {
            FileInputStream fis = new FileInputStream(fm.getData());
            Workbook w = new HSSFWorkbook(fis);
            Sheet s = w.getSheetAt(0);
            Row r = s.getRow((int) id);
            JTable t = v.getValidation().getTable();
            TableModel tm = t.getModel();
            if (this.lote != Integer.parseInt(lote)) {
                r.createCell(2).setCellValue(Integer.parseInt(lote));
                tm.setValueAt(Integer.parseInt(lote), (int) id, 2);
            }
            if (this.qnt != Integer.parseInt(qnt)) {
                r.createCell(3).setCellValue(Integer.parseInt(qnt));
                tm.setValueAt(Integer.parseInt(qnt), (int) id, 3);
            }
            if (!almox.equalsIgnoreCase(this.talmox)) {
                r.createCell(4).setCellValue(almox);
                tm.setValueAt(almox, (int) id, 4);
            }
            if (!validade.equalsIgnoreCase(this.validade)) {
                r.createCell(5).setCellValue(validade);
                tm.setValueAt(validade, (int) id, 5);
            }
            FileOutputStream fos = new FileOutputStream(fm.getData());
            w.write(fos);
            fos.close();
            w.close();
        } catch (IOException ex) {
            Frigobar.sendInfo(0, ex.getMessage(), "Erro");
        }

    }//GEN-LAST:event_tEditarMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu bMenu;
    private javax.swing.JMenuBar bMenuBar;
    private javax.swing.JMenu bVoltar;
    private javax.swing.JLabel lLote;
    private javax.swing.JLabel lProduto;
    private javax.swing.JLabel lQnt;
    private javax.swing.JLabel lTAlmox;
    private javax.swing.JLabel lValidade;
    private javax.swing.JLabel lid;
    private javax.swing.JFormattedTextField tAlmox;
    private javax.swing.JButton tEditar;
    private javax.swing.JTextField tLote;
    private javax.swing.JTextField tQnt;
    private javax.swing.JFormattedTextField tValidade;
    // End of variables declaration//GEN-END:variables
}
